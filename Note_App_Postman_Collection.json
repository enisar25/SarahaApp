{
	"info": {
		"_postman_id": "note-app-collection",
		"name": "Note App API Collection",
		"description": "Complete API collection for the Note App project with authentication, user management, and note operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Signup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\",\n    \"phone\": \"+1234567890\",\n    \"age\": 25\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "User Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login"
							]
						},
						"description": "Login user and get access and refresh tokens"
					},
					"response": []
				},
				{
					"name": "Get Access Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/get-access-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"get-access-token"
							]
						},
						"description": "Get access token using email and password"
					},
					"response": []
				},
				{
					"name": "Get Refresh Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/get-refresh-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"get-refresh-token"
							]
						},
						"description": "Refresh access token using refresh token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for signup, login, and token management"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Get current authenticated user details"
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"all"
							]
						},
						"description": "Get all users (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Updated\",\n    \"email\": \"john.updated@example.com\",\n    \"age\": 26\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Update current user profile"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Delete current user account"
					},
					"response": []
				}
			],
			"description": "User management endpoints including signup, login, profile management"
		},
		{
			"name": "Notes",
			"item": [
				{
					"name": "1. Create Note",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My First Note\",\n    \"content\": \"This is the content of my first note. It can contain multiple lines and detailed information.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes"
							]
						},
						"description": "Create a new note (userId extracted from token)"
					},
					"response": []
				},
				{
					"name": "2. Update Note",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Note Title\",\n    \"content\": \"This is the updated content of the note.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"{{note_id}}"
							]
						},
						"description": "Update a specific note (owner only)"
					},
					"response": []
				},
				{
					"name": "3. Replace Note",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Completely New Title\",\n    \"content\": \"This completely replaces the entire note document.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/notes/replace/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"replace",
								"{{note_id}}"
							]
						},
						"description": "Replace entire note document (owner only)"
					},
					"response": []
				},
				{
					"name": "4. Update All Notes Title",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Title for All My Notes\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/notes/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"all"
							]
						},
						"description": "Update title of all notes created by logged-in user"
					},
					"response": []
				},
				{
					"name": "5. Delete Note",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"{{note_id}}"
							]
						},
						"description": "Delete a specific note (owner only)"
					},
					"response": []
				},
				{
					"name": "6. Get Paginated Notes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/notes/paginate-sort?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"paginate-sort"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get paginated notes sorted by createdAt desc"
					},
					"response": []
				},
				{
					"name": "7. Get Note by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"{{note_id}}"
							]
						},
						"description": "Get a specific note by ID (owner only)"
					},
					"response": []
				},
				{
					"name": "8. Search Notes by Content",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/notes/note-by-content?content=Workout Plan",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"note-by-content"
							],
							"query": [
								{
									"key": "content",
									"value": "Workout Plan"
								}
							]
						},
						"description": "Search notes by content for logged-in user"
					},
					"response": []
				},
				{
					"name": "9. Get Notes with User Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/notes/note-with-user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"note-with-user"
							]
						},
						"description": "Get all notes with user info (title, userId, createdAt, email)"
					},
					"response": []
				},
				{
					"name": "10. Aggregate Notes with Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/notes/aggregate?title=Code Review Notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"aggregate"
							],
							"query": [
								{
									"key": "title",
									"value": "Code Review Notes"
								}
							]
						},
						"description": "Get notes with aggregation and user info, searchable by title"
					},
					"response": []
				},
				{
					"name": "11. Delete All Notes",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes"
							]
						},
						"description": "Delete all notes for the logged-in user"
					},
					"response": []
				}
			],
			"description": "Complete note management endpoints with authentication and advanced features"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-capture tokens and IDs from responses",
					"if (pm.response.code === 200 || pm.response.code === 201) {",
					"    const responseJson = pm.response.json();",
					"    ",
					"    // Capture access token",
					"    if (responseJson.data && responseJson.data.access_token) {",
					"        pm.collectionVariables.set('access_token', responseJson.data.access_token);",
					"        console.log('Access token captured:', responseJson.data.access_token);",
					"    }",
					"    ",
					"    // Capture refresh token",
					"    if (responseJson.data && responseJson.data.refresh_token) {",
					"        pm.collectionVariables.set('refresh_token', responseJson.data.refresh_token);",
					"        console.log('Refresh token captured:', responseJson.data.refresh_token);",
					"    }",
					"    ",
					"    // Capture user ID",
					"    if (responseJson.data && responseJson.data.user && responseJson.data.user._id) {",
					"        pm.collectionVariables.set('user_id', responseJson.data.user._id);",
					"        console.log('User ID captured:', responseJson.data.user._id);",
					"    }",
					"    ",
					"    // Capture note ID from note creation or single note responses",
					"    if (responseJson.data && responseJson.data.newNote && responseJson.data.newNote._id) {",
					"        pm.collectionVariables.set('note_id', responseJson.data.newNote._id);",
					"        console.log('Note ID captured:', responseJson.data.newNote._id);",
					"    } else if (responseJson.data && responseJson.data.note && responseJson.data.note._id) {",
					"        pm.collectionVariables.set('note_id', responseJson.data.note._id);",
					"        console.log('Note ID captured:', responseJson.data.note._id);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "note_id",
			"value": "",
			"type": "string"
		}
	]
}
